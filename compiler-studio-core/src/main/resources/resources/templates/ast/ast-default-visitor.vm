package $astGen.package;

#macro (repeatable $type $name $count)
for (${astGen.fieldType($type.elementType)} e$count : ${name}) {
#if ($type.elementType.isRepeatable())
	#set ($name  = "e$count")
	#set ($count = $count + 1)
	#repeatable($type.elementType, $name, $count)
#else
	e${count}.visit(this);
#end
}
#end

public class Default${astGen.model.name}Visitor implements I${astGen.model.name}Visitor {

#foreach ($node in $astGen.model.nodes)
#if (! $node.abstract)
	public void visit${node.name}(${node.name} a${node.name}) {
#foreach ($child in $node.fields)
#if ($child.type.isRepeatable())
		#set ($name = "a${node.name}.get${astGen.firstUpper($child.name)}()")
		#repeatable($child.type, $name, 0)
#else
#if (! $child.type.isPrimitive())
		a${node.name}.get${astGen.firstUpper($child.name)}().visit(this);
#end
#end
#end
	}
	
#end	
#end
}