package $astGen.package;

import org.xteam.cs.runtime.Span;

public #if ($node.abstract)abstract #{end}class $node.name extends #if ($node.super)$node.super.name#{else}$astGen.astNode#end {
#foreach ($child in $node.fields)
	protected $astGen.fieldType($child.type) ${child.name};
#end
	
	public ${node.name}(Span span#foreach ($field in $node.allFields), $astGen.fieldType($field.type) ${field.name}#end) {
		super(span#foreach ($field in $astGen.collectSuperFields($node)), ${field.name}#end);
#foreach ($field in $node.fields)
		this.${field.name} = ${field.name};
#end
	}
	
#foreach ($child in $node.fields)
	public $astGen.fieldType($child.type) get$astGen.firstUpper($child.name)() {
		return ${child.name};
	}
	
	public void set$astGen.firstUpper($child.name)($astGen.fieldType($child.type) ${child.name}) {
		this.${child.name} = ${child.name};
	}
#end

#if ($node.abstract)
	public abstract void visit(I${astGen.model.name}Visitor visitor);
#else
	public void visit(I${astGen.model.name}Visitor visitor) {
		visitor.visit${node.name}(this);
	}
#end
	
}